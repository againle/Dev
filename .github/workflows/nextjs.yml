name: Deploy Full Stack Application

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages and packages
permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and test frontend
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: './frontend/package-lock.json'
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci
      - name: Build with Next.js
        run: npm run build
      - name: Upload frontend artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/out
          name: frontend-artifact

  # Build and test backend
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Create test database
        run: |
          python -c "from app import db; db.create_all()"
      - name: Upload backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-artifact
          path: ./backend/

  # Deploy to production
  deploy:
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-artifact
          path: ./frontend-dist
          
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-artifact
          path: ./backend-dist
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          path: ./frontend-dist
          
      - name: Deploy Backend to Cloud
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          railway up --detach --service backend-service
